@model NoodlerMVC.Models.ProfileViewModel
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Index";
    string currentUserId = User.Identity.GetUserId();
}

<div class="row">
    <div class="col-lg-4">
        <img src="@Url.Action("RenderProfileImage", "Profile", new { userId = Model.Id })" id="ProfileImage" height="232" width="232" />
        @if (Request.IsAuthenticated && !currentUserId.Equals(Model.Id)) {
            <br />
            switch (ViewBag.ProfileRelation) {
                case "Friends":
                    <div class="d-none" id="RequestBtnGroup">
                        <button class="btn btn-success" id="AcceptBtn">Accept</button>
                        <button class="btn btn-danger" id="DeclineBtn">Decline</button>
                        <br />
                    </div>
                    <button class="btn btn-danger" id="FriendBtn">Remove Friend</button>
                    break;
                case "IncomingRequest":
                    <div class="" id="RequestBtnGroup">
                        <button class="btn btn-success" id="AcceptBtn">Accept</button>
                        <button class="btn btn-danger" id="DeclineBtn">Decline</button>
                        <br />
                    </div>
                    <button class="btn btn-info" id="FriendBtn">Incoming Friend Request</button>
                    break;
                case "OutgoingRequest":
                    <div class="d-none" id="RequestBtnGroup">
                        <button class="btn btn-success" id="AcceptBtn">Accept</button>
                        <button class="btn btn-danger" id="DeclineBtn">Decline</button>
                        <br />
                    </div>
                    <button class="btn btn-warning" id="FriendBtn">Cancel Friend Request</button>
                    break;
                case "NotFriends":
                    <div class="d-none" id="RequestBtnGroup">
                        <button class="btn btn-success" id="AcceptBtn">Accept</button>
                        <button class="btn btn-danger" id="DeclineBtn">Decline</button>
                        <br />
                    </div>
                    <button class="btn btn-info" id="FriendBtn">Send Friend Request</button>
                    break;
                default:
                    break; // This should never happen
            }
        }

        <br /><strong>Name</strong><br />
        @Html.DisplayFor((m) => m.FirstName) @Html.DisplayFor((m) => m.LastName)
        <br />
        <strong>Birthdate</strong><br />
        @Html.DisplayFor((m) => m.BirthDate)
        <br />
        <strong>@Html.DisplayNameFor((m) => m.Biography)</strong><br />
        @Html.DisplayFor((m) => m.Biography)
        <br />
        <strong>@Html.DisplayNameFor((m) => m.Gender)</strong><br />
        @Html.DisplayFor((m) => m.Gender)
        @if (Request.IsAuthenticated && currentUserId.Equals(Model.Id)) {
            <br />
            <div>
                @Html.ActionLink("Change profile information", "Manage", "Profile", new { area = "" }, new { @class = "btn btn-info changeProfileBtn" })
                <br />
                @Html.ActionLink("Manage account details", "Index", "Manage", new { area = "" }, new { @class = "btn btn-info manageAccountBtn" })
                <br />
                @Html.ActionLink("Export to XML", "ExportProfile", "Profile", null, new { target = "_blank", @class = "btn btn-info exportToXmlBtn" })
                @*<button type="button" class="btn btn-info exportToXmlBtn">Export to XML</button>*@
                <br />
                <button type="button" class="btn btn-danger suspendAccountBtn" data-toggle="modal" data-target="#myModal">Suspend Account</button>
                <!-- Modal delete account-->
                <div class="modal fade" id="myModal" tabindex="-1" role="dialog">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Warning</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <p>Are you sure you want to suspend your account?</p>
                                <p>Suspending your account will remove it from all of your friends' friendlists and prevent it from appearing in searches.</p>
                                <p>Suspending your account causes no loss of data, nor will you lose contact with</p>
                                <p>If you ever log back into your account it will become active again, and re-appear in your friends' friendlists and searches.</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("SuspendAccount","Profile")'">Suspend Account</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <hr />
        @if (Request.IsAuthenticated && currentUserId.Equals(Model.Id)) {
            <div>
                <h1>Latest Visitors</h1>
                <div class="list-group list-group-flush" id="VisitorList">
                    <!-- Will be filled out with the visitors -->
                </div>
            </div>
        }
    </div>
    <div class="col-lg-5" id="PostWallDiv">
        @Html.Partial("_PostWall", Model.Posts)
        <hr />
    </div>
    <div class="col-lg-3" id="FriendListDiv">
        @Html.Partial("_Friends", Model.Friends)
    </div>
</div>

@section Scripts{
    <script src="~/Scripts/custom/profile-requests.js"></script>
    <script src="~/Scripts/custom/profile-posts.js"></script>
    <script src="~/Scripts/custom/profile-friends.js"></script>
    @if (Request.IsAuthenticated && currentUserId.Equals(Model.Id)) {
        <script src="~/Scripts/custom/profile-visitors.js"></script>
    }
}